my1.age=25
my1.name=hh

pagesize=5


spring.thymeleaf.cache=false
#针对的是resources下面的templates,默认就是�?
#spring.thymeleaf.prefix=classpath:/templates/
#针对的是webapp下面
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html

#jsp访问配置

#spring.thymeleaf.cache=false
#��Ե���resources�����templates,Ĭ�Ͼ��ǵ�
#spring.thymeleaf.prefix=classpath:/templates/
#��Ե���webapp����
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html

#jsp��������
spring.mvc.view.prefix=/view/
spring.mvc.view.suffix=.jsp


#spring.datasource.url=jdbc:mysql://192.168.1.32:3306/wms
spring.datasource.url=jdbc:mysql://192.168.1.32:3306/wms
spring.datasource.username=root
#spring.datasource.password=1234
spring.datasource.password=root
#Mybatis接口xml映射文件路径
mybatis.mapper-locations=classpath:mapperxml/*.xml

#Mybatis实体pojo类路径，可以不用
#mybatis.type-aliases-package=com.ccc.springbootwebtest.com.ccc.demoboot.domain
# 驼峰命名规范 如：数据库字段是  order_id 那么 实体字段就要写成 orderId

#Mybatisʵ��pojo��·�������Բ���
mybatis.type-aliases-package=com.domain
# �շ������淶 �磺���ݿ��ֶ���  order_id ��ô ʵ���ֶξ�Ҫд�� orderId
mybatis.configuration.map-underscore-to-camel-case=true


# 如果想看到mybatis日志�?要做如下配置  com.ccc.springbootwebtest.dao是Mapper接口的路�?
# logging.level.*=debug
logging.level.com.ccc.demoboot.mapper=DEBUG

########## 通用Mapper ##########
# 主键自增回写方法,默认值MYSQL,详细说明请看文档
mapper.identity=MYSQL
mapper.mappers=tk.mybatis.mapper.common.BaseMapper
# 设置 insert �? update 中，是否判断字符串类�?!=''
mapper.not-empty=true
# 枚举按简单类型处�?(枚举按简单类型处理，如果有枚举字段则�?要加上该配置才会做映�?)
mapper.enum-as-simple-type=true
########## 分页插件 ##########
pagehelper.helperDialect=mysql
pagehelper.params=count=countSql
#pagehelper.reasonable：分页合理化参数，默认�?�为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过�?�数时），会查询�?后一页�?�默认false 时，直接根据参数进行查询�?
pagehelper.reasonable=false
#pagehelper.support-methods-arguments：支持�?�过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上�? params 配置的字段中取�?�，查找到合适的值时就会自动分页�?
pagehelper.supportMethodsArguments=true


# 是否支持批量上传   (默认�? true)
spring.servlet.multipart.enabled=true
# 上传文件的临时目�? （一般情况下不用特意修改�?
spring.servlet.multipart.location=
# 上传文件�?大为 1M （默认�?? 1M 根据自身业务自行控制即可�?
spring.servlet.multipart.max-file-size=1048576
# 上传请求�?大为 10M（默认�??10M 根据自身业务自行控制即可�?
spring.servlet.multipart.max-request-size=10485760
# 文件大小阈�?�，当大于这个阈值时将写入到磁盘，否则存在内存中，（默认�?0 �?般情况下不用特意修改�?
spring.servlet.multipart.file-size-threshold=0
# 判断是否要延迟解析文件（相当于懒加载，一般情况下不用特意修改�?
spring.servlet.multipart.resolve-lazily=false


# Redis 数据库索引（默认�? 0�?
spring.redis.database=0
# Redis 服务器地�?
spring.redis.host=127.0.0.1
# Redis 服务器连接端?
spring.redis.port=6379 
# Redis 服务器连接密码（默认为空�?
spring.redis.password=
# 连接池最?连接数（�??负�?�表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最?阻塞等待时间（使?负�?�表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最?空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最?空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0


##############################
#嵌入tomcat配置
spring.server.port=8095
#和CPU�?
spring.server.acceptorThreadCount=4
spring.server.minSpareThreads=50
spring.server.maxSpareThreads=50
spring.server.maxThreads=1000
spring.server.maxConnections=10000
#10秒超�?
spring.server.connectionTimeout=10000
spring.server.protocol=org.apache.coyote.http11.Http11Nio2Protocol
spring.server.redirectPort=443
spring.server.compression=on
#文件请求大小
spring.server.MaxFileSize=300MB
spring.server.MaxRequestSize=500MB